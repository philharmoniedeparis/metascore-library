/*! metaScore - v0.0.1 - 2014-03-11 - Oussama Mubarak */
(function(t){(function(t){t.metaScore={version:"0.0.1"}})(t),function(t){t.metaScore.Class=function(t){for(var e in t)t.hasOwnProperty(e)&&(this.createGetter(t,e),this.createSetter(t,e))},t.metaScore.Class.prototype.createGetter=function(e,r){this["get"+t.metaScore.String.capitaliseFirstLetter(r)]=function(){return e[r]}},t.metaScore.Class.prototype.createSetter=function(e,r){this["set"+t.metaScore.String.capitaliseFirstLetter(r)]=function(t){e[r]=t}},t.metaScore.Class.extend=function(e,r,n){var o,c;o=t.metaScore.Function.isFunction(e)?e:this.prototype.constructor,o.prototype=new t.metaScore.Class,o.prototype.constructor=o,o.superClass=this;for(c in r)r.hasOwnProperty(c)&&(o[c]=r[c]);for(c in n)n.hasOwnProperty(c)&&(o.prototype[c]=n[c]);return o}}(t),function(t){t.metaScore.Function={isFunction:function(t){return"[object Function]"===Object.prototype.toString.call(t)}}}(t),function(t){t.metaScore.String={isString:function(t){return"[object String]"===Object.prototype.toString.call(t)},capitaliseFirstLetter:function(t){return t.charAt(0).toUpperCase()+t.slice(1)}}}(t),function(t){t.metaScore.Array={isArray:function(t){return"[object Array]"===Object.prototype.toString.call(t)},copy:function(t){return[].concat(t)},shuffle:function(e){var r=t.metaScore.Array.copy(e);return r.sort(function(){return(0|3*Math.random())-1}),r},unique:function(t){for(var e=[],r=t.length,n=0;r>n;n++){for(var o=n+1;r>o;o++)t[n]===t[o]&&(o=++n);e.push(t[n])}return e},each:function(e,r,n){n||(n=t);for(var o=0,c=e.length;c>o;o++)r.call(n,e[o])}}}(t),function(t){t.metaScore.Dom=t.metaScore.Class.extend(function(t){this.els=[];for(var e=0;t.length>e;e++)this.els[e]=t[e]},{camelRe:/-([\da-z])/gi,camelReplaceFn:function(t,e){return e.toUpperCase()},camel:function(t){return t.replace(this.camelRe,this.camelReplaceFn)},select:function(e,r){var n;return r||(r=document),n=t.metaScore.String.isString(e)?r.querySelectorAll(e):e.length?e:[e],new t.metaScore.Dom(n)},create:function(e,r){var n=new t.metaScore.Dom([document.createElement(e)]);if(r){r.hasOwnProperty("class")&&(n.addClass(r["class"]),delete r["class"]),r.hasOwnProperty("text")&&(n.text(r.text),delete r.text);for(var o in r)r.hasOwnProperty(o)&&n.attr(o,r[o])}return n},hasClass:function(t,e){return t.classList.contains(e)},addClass:function(t,e){for(var r=e.split(" "),n=0,o=r.length;o>n;n++)t.classList.add(r[n])},removeClass:function(t,e){for(var r=e.split(" "),n=0,o=r.length;o>n;n++)t.classList.remove(r[n])},toggleClass:function(t,e){for(var r=e.split(" "),n=0,o=r.length;o>n;n++)t.classList.toggle(r[n])},text:function(t,e){return void 0!==e&&(t.innerHTML=e),t.innerHTML},attr:function(t,e,r){return void 0!==r&&t.setAttribute(e,r),t.getAttribute(e)},css:function(t,e,r){return e=this.camel(e),void 0!==r&&(t.style[e]=r),t.style[e]},append:function(e,r){t.metaScore.Array.isArray(r)||(r=[r]),t.metaScore.Array.each(r,function(t){e.appendChild(t)},this)},remove:function(t){t.parentElement.removeChild(t)}},{get:function(t){return this.els[t]},addClass:function(e){return t.metaScore.Array.each(this.els,function(t){this.constructor.addClass(t,e)},this),this},removeClass:function(e){return t.metaScore.Array.each(this.els,function(t){this.constructor.removeClass(t,e)},this),this},toggleClass:function(e){return t.metaScore.Array.each(this.els,function(t){this.constructor.toggleClass(t,e)},this),this},text:function(e){return t.metaScore.Array.each(this.els,function(t){this.constructor.text(t,e)},this),this},attr:function(e,r){return t.metaScore.Array.each(this.els,function(t){this.constructor.attr(t,e,r)},this),this},css:function(e,r){return t.metaScore.Array.each(this.els,function(t){this.constructor.css(t,e,r)},this),this},append:function(t){return this.constructor.append(this.get(0),t),this},appendTo:function(e){return e instanceof t.metaScore.Dom&&(e=e.get(0)),t.metaScore.Array.each(this.els,function(t){this.constructor.append(e,t)},this),this},remove:function(){return t.metaScore.Array.each(this.els,function(t){this.constructor.remove(t)},this),this}})}(t)})(this);