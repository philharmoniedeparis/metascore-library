<?php


/**
 * Implements hook_media_derivatives_engine_info().
 */
function media_ffmpeg_simple_media_derivatives_engine_info() {
  return array(
    'name' => t('Simple ffmpeg engine'),
    'type' => 'video',
    'ui_callback' => 'media_ffmpeg_simple_ui_callback'
  );
}

function media_ffmpeg_simple_ui_callback() {
  $form = array();
  $form['ffmpeg_options'] = array(
    '#type' => 'textfield',
    '#title' => t('Ffmpeg options'),
    '#description' => t('Enter ffmpeg attributes between command and an input file.' .
                        'Example: <em>ffmpeg [options] -i input.avi [output-options] output.avi</em> ([options] is content of this field)'),
  );

  $form['ffmpeg_out_options'] = array(
    '#type' => 'textfield',
    '#title' => t('Ffmpeg output options'),
    '#description' => t('Enter ffmpeg command attributes between an input and an output file.' .
                        'Example: <em>ffmpeg [options] -i input.avi [output-options] output.avi</em> ([output-options] is content of this field)'),
  );

  $form['ffmpeg_extension'] = array(
    '#type' => 'textfield',
    '#title' => t('Derivative extension'),
    '#description' => t('File extension for derivative file (without dot). Examples: mp4, avi, ...'),
  );
  
  return $form;
}

function media_ffmpeg_simple_media_derivatives_create_derivative($file, $derivative) {
  // Get path to url and test if exists.
  $ffmpeg_path = variable_get('media_ffmpeg_simple_path', '/usr/bin/ffmpeg');
  if (!file_exists($ffmpeg_path)) {
    $ex = new MediaDerivativesException($derivative->mdid, t('Unable to find ffmpeg executable. You have <a href="@url">to configure it</a> before using simple ffmpeg engine.', array('@url' => 'admin/config/media/ffmpeg_simple')));
    throw $ex;
  }

  // Get real path of source file.
  $path = drupal_realpath($file->uri);
  
  // Build derivative filename.
  $pos = strrpos($file->filename, '.');
  $new_file = 'public://' . substr($file->filename, 0, $pos);
  $new_file .= '-' . $derivative->preset->machine_name;
  $new_file .= '.' . $derivative->preset->engine_settings['ffmpeg_extension'];
  $new_file = file_destination($new_file, FILE_EXISTS_RENAME);
  
  // Encode file.
  $new_path = drupal_realpath($new_file);
  $output = $ret_val = '';
  exec(
    $ffmpeg_path . ' ' .
    $derivative->preset->engine_settings['ffmpeg_options'] .
    ' -i "' . $path . '" ' .
    $derivative->preset->engine_settings['ffmpeg_out_options'] . ' "' .
    $new_path . '"',
    $output,
    $ret_val
  );

  // Throw an exception if there was an error.
  if ($ret_val) {
    $ex = new MediaDerivativesException($derivative->mdid, t('Ffmpeg ended with an error (exit code !code).', array('!code' => $ret_val)));
    throw $ex;
  }

  // Return file.
  return $new_file;
}

function media_ffmpeg_simple_permission() {
  return array(
    'administer media_ffmpeg_simple' => array(
      'title' => t('Administer simple ffmpeg engine'),
      'description' => t('Administer media derivatives API simple ffmpeg engine.'),
    ),
  );
}

function media_ffmpeg_simple_menu() {
  return array(
    'admin/config/media/ffmpeg_simple' => array(
      'title' => 'Simple ffmpeg engine',
      'description' => 'Configure media derivatives simple ffmpeg engine.',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('media_ffmpeg_simple_config'),
      'access arguments' => array('administer media_ffmpeg_simple'),
    ),
  );
}

function media_ffmpeg_simple_config($form, &$form_state) {
  $form['media_ffmpeg_simple_path'] = array(
    '#type' => 'textfield',
    '#title' => t('Ffmpeg path'),
    '#description' => t('System path to ffmpeg command. On unix systems can be found with: <em>whereis ffmpeg</em>.'),
    '#default_value' => variable_get('media_ffmpeg_simple_path', '/usr/bin/ffmpeg'),
  );
  
  $handle = popen(variable_get('media_ffmpeg_simple_path', '/usr/bin/ffmpeg') . ' 2>&1', 'r');
  $output = '';
  while ($read = fread($handle, 2096)) {
    $output .= $read;
  }
  pclose($handle);

  $form['ffmpeg_output_wrapper'] = array(
    '#type' => 'fieldset',
    '#title' => t('Ffmpeg command output'),
  );
  
  $form['ffmpeg_output_wrapper']['ffmpeg_output'] = array(
    '#type' => 'markup',
    '#markup' => '<pre>' . $output . '</pre>',
  );
  
  return system_settings_form($form);
}

function media_ffmpeg_simple_uninstall() {
  variable_del('media_ffmpeg_simple_path');
}