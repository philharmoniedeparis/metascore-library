 src/js/metaScore.Editor.js | 210 +++++++++++++++++++++++++++++++++++----------
 1 file changed, 166 insertions(+), 44 deletions(-)

diff --git a/src/js/metaScore.Editor.js b/src/js/metaScore.Editor.js
index 2dc71fd..d24b75a 100644
--- a/src/js/metaScore.Editor.js
+++ b/src/js/metaScore.Editor.js
@@ -30,13 +30,10 @@ metaScore.Editor = (function(){
     this.h_ruler = new metaScore.Dom('<div/>', {'class': 'ruler horizontal'}).appendTo(this);
     this.v_ruler = new metaScore.Dom('<div/>', {'class': 'ruler vertical'}).appendTo(this);
     
-    this.workspace = new metaScore.Dom('<div/>', {'class': 'workspace'}).appendTo(this);
-    
     this.mainmenu = new metaScore.editor.MainMenu().appendTo(this)
       .addDelegate('button[data-action]:not(.disabled)', 'click', metaScore.Function.proxy(this.onMainmenuClick, this))
       .addDelegate('.time', 'valuechange', metaScore.Function.proxy(this.onMainmenuTimeFieldChange, this))
-      .addDelegate('.r-index', 'valuechange', metaScore.Function.proxy(this.onMainmenuRindexFieldChange, this));
-      
+      .addDelegate('.r-index', 'valuechange', metaScore.Function.proxy(this.onMainmenuRindexFieldChange, this));      
     
     this.sidebar_wrapper = new metaScore.Dom('<div/>', {'class': 'sidebar-wrapper'}).appendTo(this)
       .addListener('resizestart', metaScore.Function.proxy(this.onSidebarResizeStart, this))
@@ -84,12 +81,37 @@ metaScore.Editor = (function(){
         
     this.panels.text = new metaScore.editor.panel.Text().appendTo(this.sidebar);
     
+    this.workspace = new metaScore.Dom('<div/>', {'class': 'workspace'}).appendTo(this);
+    
     this.grid = new metaScore.Dom('<div/>', {'class': 'grid'}).appendTo(this.workspace);
     this.version = new metaScore.Dom('<div/>', {'class': 'version', 'text': 'metaScore v.'+ metaScore.getVersion() +' r.'+ metaScore.getRevision()}).appendTo(this.workspace);
     
     this.player_frame = new metaScore.Dom('<iframe/>', {'src': 'about:blank', 'class': 'player-frame'}).appendTo(this.workspace)
       .addListener('load', metaScore.Function.proxy(this.onPlayerFrameLoadSuccess, this))
       .addListener('error', metaScore.Function.proxy(this.onPlayerFrameLoadError, this));
+        
+    this.contextmenu = new metaScore.editor.ContextMenu()
+      .addTask('copy-block', 'Copy block', function(context){
+        return metaScore.Dom.closest(context, '.metaScore-component.block') ? true : false;
+      })
+      .addTask('paste-block', 'Paste block', metaScore.Function.proxy(function(context){
+        return this.clipboard.getDataType() === 'block';
+      }, this))
+      .addTask('delete-block', 'Delete block', metaScore.Function.proxy(function(context){
+        return metaScore.Dom.closest(context, '.metaScore-component.block') ? true : false;
+      }, this))
+      .addSeparator()
+      .addTask('copy-element', 'Copy element', function(context){
+        return metaScore.Dom.closest(context, '.metaScore-component.element') ? true : false;
+      })
+      .addTask('paste-element', 'Paste element', metaScore.Function.proxy(function(context){
+        return (this.clipboard.getDataType() === 'element') && (metaScore.Dom.closest(context, '.metaScore-component.page') ? true : false);
+      }, this))
+      .addTask('delete-element', 'Delete element', metaScore.Function.proxy(function(context){
+        return metaScore.Dom.closest(context, '.metaScore-component.element') ? true : false;
+      }, this))
+      .addListener('taskclick', metaScore.Function.proxy(this.onContextMenuTaskClick, this))
+      .appendTo(this.workspace);
     
     this.history = new metaScore.editor.History()
       .addListener('add', metaScore.Function.proxy(this.onHistoryAdd, this))
@@ -103,6 +125,8 @@ metaScore.Editor = (function(){
       .addListener('submit', metaScore.Function.proxy(this.onDetailsOverlaySubmit, this, ['update']));
       
     this.detailsOverlay.getField('type').readonly(true);
+    
+    this.clipboard = new metaScore.editor.Clipboard();
 
     new metaScore.Dom('body')
       .addListener('keydown', metaScore.Function.proxy(this.onKeydown, this))
@@ -679,25 +703,8 @@ metaScore.Editor = (function(){
         break;
 
       case 'delete':
-        player = this.getPlayer();
-        panel = this.panels.block;
         block = this.panels.block.getComponent();
-
-        if(block){
-          panel.unsetComponent();
-          block.remove();
-
-          this.history.add({
-            'undo': function(){
-              player.addBlock(block);
-              panel.setComponent(block);
-            },
-            'redo': function(){
-              panel.unsetComponent();
-              block.remove();
-            }
-          });
-        }
+        this.deleteBlock(block);
         break;
     }
 
@@ -1116,25 +1123,8 @@ metaScore.Editor = (function(){
         break;
 
       case 'delete':
-        panel = this.panels.element;
-        page = this.panels.page.getComponent();
-        element = this.panels.element.getComponent();
-
-        if(element){
-          panel.unsetComponent();
-          element.remove();
-
-          this.history.add({
-            'undo': function(){
-              page.addElement(element);
-              panel.setComponent(element);
-            },
-            'redo': function(){
-              panel.unsetComponent();
-              element.remove();
-            }
-          });
-        }
+        element = this.panels.element.getComponent();        
+        this.deleteElement(element);
         break;
     }
   };
@@ -1248,12 +1238,18 @@ metaScore.Editor = (function(){
    * @param {} evt
    * @return 
    */
-  Editor.prototype.onPlayerFrameLoadSuccess = function(evt){    
-    this.player_frame.get(0).contentWindow.player
+  Editor.prototype.onPlayerFrameLoadSuccess = function(evt){
+    var iframe_el = this.player_frame.get(0),
+      iframe_window = iframe_el.contentWindow,
+      player = iframe_window.player;
+  
+    player
       .addListener('loadsuccess', metaScore.Function.proxy(this.onPlayerLoadSuccess, this))
       .addListener('loaderror', metaScore.Function.proxy(this.onPlayerLoadError, this))
       .addListener('idset', metaScore.Function.proxy(this.onPlayerIdSet, this))
       .addListener('revisionset', metaScore.Function.proxy(this.onPlayerRevisionSet, this));
+      
+    this.contextmenu.setListenerTarget(iframe_window);
   };
 
   /**
@@ -1337,6 +1333,67 @@ metaScore.Editor = (function(){
 
   /**
    * Description
+   * @method onContextMenuTaskClick
+   * @param {} evt
+   * @return 
+   */
+  Editor.prototype.onContextMenuTaskClick = function(evt){
+    var dom, component;
+    
+    switch(evt.detail.action){
+      case 'copy-block':
+        dom = metaScore.Dom.closest(evt.detail.context, '.metaScore-component.block');
+        component = dom._metaScore;
+        
+        if(component.instanceOf('Block')){
+          this.clipboard.setData('block', component.getProperties());
+        }
+        break;
+        
+      case 'paste-block':
+        this.getPlayer().addBlock(this.clipboard.getData());
+        break;
+        
+      case 'delete-block':
+        dom = metaScore.Dom.closest(evt.detail.context, '.metaScore-component.block');
+        component = dom._metaScore;
+        
+        if(component.instanceOf('Block')){
+          this.deleteBlock(component);
+        }
+        break;
+        
+      case 'copy-element':
+        dom = metaScore.Dom.closest(evt.detail.context, '.metaScore-component.element');
+        component = dom._metaScore;
+        
+        if(component.instanceOf('Element')){
+          this.clipboard.setData('element', component.getProperties());
+        }
+        break;
+        
+      case 'paste-element':
+        dom = metaScore.Dom.closest(evt.detail.context, '.metaScore-component.page');
+        component = dom._metaScore;
+        
+        if(component.instanceOf('Page')){
+          component.addElement(this.clipboard.getData());
+        }
+        break;
+        
+      case 'delete-element':
+        dom = metaScore.Dom.closest(evt.detail.context, '.metaScore-component.element');
+        component = dom._metaScore;
+        
+        if(component.instanceOf('Element')){
+          this.deleteElement(component);
+        }
+        break;
+    }
+  };
+
+  /**
+   * Description
    * @method onComponentClick
    * @param {} evt
    * @param {} dom
@@ -1361,6 +1418,8 @@ metaScore.Editor = (function(){
       this.panels.block.setComponent(component);
     }
     
+    this.contextmenu.hide();
+    
     evt.stopImmediatePropagation();
   };
 
@@ -1377,6 +1436,8 @@ metaScore.Editor = (function(){
     }
 
     this.panels.block.unsetComponent();
+    
+    this.contextmenu.hide();
 
     evt.stopPropagation();
   };
@@ -1879,7 +1940,7 @@ metaScore.Editor = (function(){
    * @method removePlayer
    * @chainable 
    */
-  Editor.prototype.removePlayer = function(){    
+  Editor.prototype.removePlayer = function(){
     delete this.player;
 
     this.player_frame.get(0).contentWindow.location.replace('about:blank');
@@ -1891,6 +1952,67 @@ metaScore.Editor = (function(){
 
   /**
    * Description
+   * @method deleteBlock
+   * @param {} block
+   * @chainable 
+   */
+  Editor.prototype.deleteBlock = function(block){
+    var player = this.getPlayer(),
+      panel = this.panels.block;
+
+    if(block){
+      if(panel.getComponent() === block){
+        panel.unsetComponent();
+      }
+      
+      block.remove();
+
+      this.history.add({
+        'undo': function(){
+          player.addBlock(block);
+          panel.setComponent(block);
+        },
+        'redo': function(){
+          panel.unsetComponent();
+          block.remove();
+        }
+      });
+    }
+  };
+
+  /**
+   * Description
+   * @method deleteElement
+   * @param {} element
+   * @chainable 
+   */
+  Editor.prototype.deleteElement = function(element){    
+    var player = this.getPlayer(),
+      panel = this.panels.element,
+      page = this.panels.page.getComponent();
+
+    if(element){
+      if(panel.getComponent() === element){
+        panel.unsetComponent();
+      }
+      
+      element.remove();
+
+      this.history.add({
+        'undo': function(){
+          page.addElement(element);
+          panel.setComponent(element);
+        },
+        'redo': function(){
+          panel.unsetComponent();
+          element.remove();
+        }
+      });
+    }
+  };
+
+  /**
+   * Description
    * @method openGuideSelector
    * @chainable 
    */
